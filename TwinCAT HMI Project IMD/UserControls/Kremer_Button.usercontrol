<div id="Kremer_Button" data-tchmi-type="tchmi-user-control" 
     data-tchmi-top="0" data-tchmi-left="0" 
     data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%"
     data-tchmi-creator-viewport-width="500" data-tchmi-creator-viewport-height="500" data-tchmi-visibility="%f%ConvertBooleanToVisibility(%pp%Visible%/pp%, &quot;Collapsed&quot;);%/f%">

<div id="TcHmiButton_34" data-tchmi-type="tchmi-button" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0.0" data-tchmi-left-unit="%" data-tchmi-text="%pp%Value%/pp%" data-tchmi-top="0.0" data-tchmi-top-unit="%" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-font-family="%f%if(%pp%FontFamily%/pp% != &quot;&quot;) { %pp%FontFamily%/pp% } else {}%/f%" data-tchmi-text-font-size="%f%if(%pp%FontSize%/pp% != 0){ %pp%FontSize%/pp% } else {}%/f%">




<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_34.onStatePressed",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "expressions": [
          {
            "compare1": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%ButtonType%/pp%"
            },
            "compare2": {
              "objectType": "StaticValue",
              "valueType": "tchmi:project#/definitions/ButtonType",
              "value": "Continuous"
            },
            "compareOperator": "==",
            "logic": null
          }
        ],
        "true": [
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%pp%Symbol%/pp%",
            "valueType": "tchmi:general#/definitions/BOOL",
            "value": {
              "objectType": "StaticValue",
              "valueType": "tchmi:general#/definitions/BOOL",
              "value": true
            },
            "asyncWait": true
          },
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%ctrl%TcHmiButton_34::BackgroundColor%/ctrl%",
            "valueType": "tchmi:framework#/definitions/Color",
            "value": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%BackcolorOn%/pp%"
            },
            "asyncWait": true
          },
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%ctrl%TcHmiButton_34::TextColor%/ctrl%",
            "valueType": "tchmi:framework#/definitions/SolidColor",
            "value": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%TextcolorOn%/pp%"
            },
            "asyncWait": true
          }
        ],
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_34.onStateReleased",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "expressions": [
          {
            "compare1": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%ButtonType%/pp%"
            },
            "compare2": {
              "objectType": "StaticValue",
              "valueType": "tchmi:project#/definitions/ButtonType",
              "value": "Continuous"
            },
            "compareOperator": "==",
            "logic": null
          }
        ],
        "true": [
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%pp%Symbol%/pp%",
            "valueType": "tchmi:general#/definitions/BOOL",
            "value": {
              "objectType": "StaticValue",
              "valueType": "tchmi:general#/definitions/BOOL",
              "value": false
            },
            "asyncWait": true
          },
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%ctrl%TcHmiButton_34::BackgroundColor%/ctrl%",
            "valueType": "tchmi:framework#/definitions/Color",
            "value": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%BackcolorOff%/pp%"
            },
            "asyncWait": true
          },
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%ctrl%TcHmiButton_34::TextColor%/ctrl%",
            "valueType": "tchmi:framework#/definitions/SolidColor",
            "value": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%TextcolorOff%/pp%"
            },
            "asyncWait": true
          }
        ],
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_34.onPressed",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "var button = new TcHmi.Symbol('%pp%ButtonType%/pp%');\nvar Type = button.read();\nvar symbol = new TcHmi.Symbol('%pp%Symbol%/pp%');\nvar symbolValue = symbol.read();\nif(Type == \"Set\"){\n\tsymbol.write(true);\n} else if (Type == \"Reset\") {\n\tsymbol.write(false);\n} else if (Type == \"Toggle\"){\n\tif(symbolValue == true){\n\t\tsymbol.write(false);\t\n \t} else {\n\t\tsymbol.write(true);\n\t}\n}"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ],
    "displayName": ""
  },
  {
    "event": "%pp%Symbol%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "expressions": [
          {
            "compare1": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%Symbol%/pp%"
            },
            "compare2": {
              "objectType": "StaticValue",
              "valueType": "tchmi:general#/definitions/BOOL",
              "value": true
            },
            "compareOperator": "==",
            "logic": null
          }
        ],
        "true": [
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%ctrl%TcHmiButton_34::BackgroundColor%/ctrl%",
            "valueType": "tchmi:framework#/definitions/Color",
            "value": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%BackcolorOn%/pp%"
            },
            "asyncWait": true
          },
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%ctrl%TcHmiButton_34::TextColor%/ctrl%",
            "valueType": "tchmi:framework#/definitions/SolidColor",
            "value": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%TextcolorOn%/pp%"
            },
            "asyncWait": true
          }
        ],
        "false": [
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%ctrl%TcHmiButton_34::BackgroundColor%/ctrl%",
            "valueType": "tchmi:framework#/definitions/Color",
            "value": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%BackcolorOff%/pp%"
            },
            "asyncWait": true
          },
          {
            "objectType": "WriteToSymbol",
            "active": true,
            "symbolExpression": "%ctrl%TcHmiButton_34::TextColor%/ctrl%",
            "valueType": "tchmi:framework#/definitions/SolidColor",
            "value": {
              "objectType": "Symbol",
              "symbolExpression": "%pp%TextcolorOff%/pp%"
            },
            "asyncWait": true
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>



<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>











<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 1,
  "right": 1,
  "top": 1,
  "bottom": 1,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-color" type="application/json">
{
  "color": "rgba(193, 193, 193, 1)"
}
</script>
</div>

</div>