<div id="Kremer_EditUser" data-tchmi-type="tchmi-user-control" 
     data-tchmi-top="0" data-tchmi-left="0" 
     data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%"
     data-tchmi-creator-viewport-width="500" data-tchmi-creator-viewport-height="500">

<div id="TcHmiTextbox_2" data-tchmi-type="tchmi-textbox" data-tchmi-height="13" data-tchmi-height-unit="%" data-tchmi-left="2.0" data-tchmi-left-unit="%" data-tchmi-text="%pp%Username%/pp%" data-tchmi-top="2.0" data-tchmi-top-unit="%" data-tchmi-width="78.0" data-tchmi-width-unit="%" data-tchmi-placeholder="Username">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiTextbox_2.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%Keyboard::Visibility%/pp%",
        "valueType": "tchmi:framework#/definitions/Visibility",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/Visibility",
          "value": "Visible"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<div id="TcHmiCombobox" data-tchmi-type="tchmi-combobox" data-tchmi-combobox-text="Group" data-tchmi-height="13" data-tchmi-height-unit="%" data-tchmi-left="2.0" data-tchmi-left-unit="%" data-tchmi-top="32.0" data-tchmi-top-unit="%" data-tchmi-width="96.0" data-tchmi-width-unit="%" data-tchmi-data-height="50" data-tchmi-selected-index="%pp%GroupIndex%/pp%">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>



</div>

<div id="TcHmiCombobox_1" data-tchmi-type="tchmi-combobox" data-tchmi-combobox-text="Select Language" data-tchmi-height="13" data-tchmi-height-unit="%" data-tchmi-left="2" data-tchmi-left-unit="%" data-tchmi-top="47.0" data-tchmi-top-unit="%" data-tchmi-width="96.0" data-tchmi-width-unit="%" data-tchmi-src-data="%f%GetRegisteredLocales();%/f%" data-tchmi-selected-index="%pp%LanguageIndex%/pp%" data-tchmi-data-height="50" data-tchmi-max-list-height="100">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>

</div>

<div id="TcHmiButton_44" data-tchmi-type="tchmi-button" data-tchmi-height="21.0" data-tchmi-height-unit="%" data-tchmi-left="2" data-tchmi-left-unit="%" data-tchmi-text="%f%%pp%Mode%/pp%? 'Update' : 'Create'%/f%" data-tchmi-top="77.0" data-tchmi-top-unit="%" data-tchmi-width="96.0" data-tchmi-width-unit="%" data-tchmi-word-wrap="True">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_44.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%This::Visibility%/pp%",
        "valueType": "tchmi:framework#/definitions/Visibility",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/Visibility",
          "value": "Collapsed"
        },
        "asyncWait": true
      },
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "var modeSymbol = new TcHmi.Symbol('%pp%Mode%/pp%');\nvar mode = modeSymbol.read();\n\nvar oldNameSymbol = new TcHmi.Symbol('%pp%Username%/pp%');\nvar nameControl = TcHmi.Controls.get('TcHmiTextbox_2');\nvar passwordControl = TcHmi.Controls.get('TcHmiTextbox_3');\nvar groupControl = TcHmi.Controls.get('TcHmiCombobox');\nvar langControl = TcHmi.Controls.get('TcHmiCombobox_1');\nvar oldGroupIndexSymbol = new TcHmi.Symbol('%pp%GroupIndex%/pp%');\nvar oldEnabledSymbol = new TcHmi.Symbol('%pp%Enabled%/pp%');\nvar oldGroupNameSymbol = new TcHmi.Symbol('%pp%GroupName%/pp%');\n\n\n\nvar oldName = oldNameSymbol.read();\nvar newUsername = nameControl.getText();\nvar newPassword = passwordControl.getText();\nvar newLang = langControl.getSelectedText();\nvar newGroupIndex = groupControl.getGridRowIndex();\nvar newGroup = groupControl.getSelectedText();\nvar oldGroupIndex = oldGroupIndexSymbol.read();\nvar oldEnabled = oldEnabledSymbol.read();\nvar oldGroupName = oldGroupNameSymbol.read();\nconsole.log(\"Group names:\");\nconsole.log(newGroup);\nconsole.log(oldGroupName);\nvar removeGroup;\n\nif(mode){\n\t// Update\n\tif(newGroup === oldGroupName){\n\t\tnewGroup = undefined;\n\t\tremovegroup = undefined;\t\t\n\t} else {\n\t\tnewGroup = [groupControl.getSelectedText()];\n\t\tremoveGroup = [oldGroupName]; \n\t};\n\tconsole.log(\"new Group\");\n\tconsole.log(newGroup);\n\t//if(newUsername === oldName){\n\t//  newUsername = null;\n\t//};\n\t\n\tvar updateOptions= '{';\n\tupdateOptions += 'domain: \"TcHmiUserManagement\",';\n\tupdateOptions += 'enabled: ' + oldEnabled + ', ';\n\tupdateOptions += 'locale: \"' + newLang + '\", ';\n\tupdateOptions += 'autoLogout: \"PT10M\"';  \n\tif(newUsername != ''){\n\t\tupdateOptions += ', newName : \"' + newUsername + '\"'; \n\t}\n\tif(newPassword != ''){\n\t\tupdateOptions += ', password : \"' + newPassword + '\"';\n\t}\n\tupdateOptions += '}';\n\t\n\tconsole.log(updateOptions);\n\t\n\tif(newUsername == ''){\t\n\t\tnameControl.setClassNames('[\"error\"]');\n\t} else {\n\t\t// reset error class\n\t\tnameControl.setClassNames('[]');\n\t\tTcHmi.Server.UserManagement.updateUser(\n\t\t    oldName, \n\t\t    {\n\t\t\t\tdomain: \"TcHmiUserManagement\",\n\t\t\t\tenabled: oldEnabled,\n\t\t\t\tlocale: newLang,\n\t\t\t\tautoLogout: \"PT10M\",\n\t\t\t\tnewName: newUsername,\n\t\t\t\taddGroups: newGroup,\n\t\t\t\tremoveGroups: removeGroup\t\t\t\t\n\t\t    },\n\t\t    function(data) {\n\t\t        if (data.error === TcHmi.Errors.NONE) {\n\t\t            // Success\n\t\t            console.log(data);\n\t\t            TcHmi.EventProvider.raise('fillUserDataGrid', 'Kremer_UserManagement_2.TcHmiDatagrid_1');\n\t\t        } else {\n\t\t            // Error\n\t\t            console.log(data);\n\t\t            TcHmi.EventProvider.raise('fillUserDataGrid', 'Kremer_UserManagement_2.TcHmiDatagrid_1');\n\t\t        }\n\t\t    }\n\t\t);\n\t}\n} else {\n\t// Create\n\t// set error class or respective empty field\n\tif(newUsername == ''){\n\t\t//nameControl.setBorderStyle('{ \"left\": \"Solid\", \"top\": \"Solid\", \"right\": \"Solid\", \"bottom\": \"Solid\" }');\n\t\t//nameControl.setBorderWidth('{ \"left\": \"2\", \"top\": \"2\", \"right\": \"2\", \"bottom\": \"2\" }');\n\t\t//nameControl.setBorderColor('{ \"color\": \"rgba(255, 0, 0, 1)\" }');\t\n\t\tnameControl.setClassNames('[\"error\"]');\n\t};\n\tif(newPassword == ''){\n\t\t//passwordControl.setBorderStyle('{ \"left\": \"Solid\", \"top\": \"Solid\", \"right\": \"Solid\", \"bottom\": \"Solid\" }');\n\t\t//passwordControl.setBorderWidth('{ \"left\": \"2\", \"top\": \"2\", \"right\": \"2\", \"bottom\": \"2\" }');\n\t\t//passwordControl.setBorderColor('{ \"color\": \"rgba(255, 0, 0, 1)\" }');\n\t\tpasswordControl.setClassNames('[\"error\"]');\n\t};\n\tif(newGroup == null){\n\t\tgroupControl.setClassNames('[\"error\"]');\n\t};\n\tif(newLang == null){\n\t\tlangControl.setClassNames('[\"error\"]');\n\t};\n\tconsole.log(newUsername + newPassword + newGroup + newLang);\n\t// If both name and password are set, save it\n\tif(newUsername != '' && newPassword != '' && newGroup != null && newLang != null){\n\t\t//passwordControl.setBorderStyle('{ \"left\": \"None\", \"top\": \"None\", \"right\": \"None\", \"bottom\": \"None\" }');\n\t\t//nameControl.setBorderStyle('{ \"left\": \"None\", \"top\": \"None\", \"right\": \"None\", \"bottom\": \"None\" }');\n\t\t// reset error classes\n\t\tnameControl.setClassNames('[]');\n\t\tpasswordControl.setClassNames('[]');\n\t\tgroupControl.setClassNames('[]');\n\t\tlangControl.setClassNames('[]');\n\t\t\n\t\tTcHmi.Server.UserManagement.addUserEx(\n\t\t    newUsername, \n\t\t    newPassword, \n\t\t    {groups: [newGroup], enabled: true, locale: newLang},\n\t\t    {timeout: 2000},\n\t\t    function(data) {\n\t\t        if (data.error === TcHmi.Errors.NONE) {\n\t\t            // Success\n\t\t            console.log('User created');\n\t\t            TcHmi.EventProvider.raise('fillUserDataGrid', 'Kremer_UserManagement_2.TcHmiDatagrid_1');\n\t\t        } else {\n\t\t            // Error\n\t\t            console.log('User failed to create');\n\t\t        }\n\t\t    }\n\t\t);\n\t}\n}"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ],
    "displayName": ""
  }
]
</script>
</div>




<script data-tchmi-target-attribute="data-tchmi-background-color" type="application/json">
{
  "color": "rgba(154, 154, 154, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "Kremer_EditUser.onAttached",
    "actions": [
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "var groupBox = TcHmi.Controls.get('TcHmiCombobox');\n\nvar array = [];\n\nTcHmi.Server.UserManagement.listUserGroups(function(data) {\n    if (data.error === TcHmi.Errors.NONE) {\n   \t\t$.each(data.groupDetailsList, function(key, value){\n\t\t\tarray.push({\"text\": key, \"value\": key});\n\t    });\n   \t\tgroupBox.setSrcData(array);\n    } else {\n        // Error\n    }\n});"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>
<div id="TcHmiButton_45" data-tchmi-type="tchmi-button" data-tchmi-height="13" data-tchmi-height-unit="%" data-tchmi-left="82.0" data-tchmi-left-unit="%" data-tchmi-text="X" data-tchmi-top="2.0" data-tchmi-top-unit="%" data-tchmi-width="16.0" data-tchmi-width-unit="%" data-tchmi-word-wrap="True">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_45.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%This::Visibility%/pp%",
        "valueType": "tchmi:framework#/definitions/Visibility",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/Visibility",
          "value": "Collapsed"
        },
        "asyncWait": true
      },
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%Keyboard::Visibility%/pp%",
        "valueType": "tchmi:framework#/definitions/Visibility",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/Visibility",
          "value": "Collapsed"
        },
        "asyncWait": true
      },
      {
        "objectType": "JavaScript",
        "active": true,
        "sourceLines": [
          "var nameControl = TcHmi.Controls.get('TcHmiTextbox_2');\nvar passwordControl = TcHmi.Controls.get('TcHmiTextbox_3');\nvar groupControl = TcHmi.Controls.get('TcHmiCombobox');\nvar langControl = TcHmi.Controls.get('TcHmiCombobox_1');\n\nnameControl.setClassNames('[]');\npasswordControl.setClassNames('[]');\ngroupControl.setClassNames('[]');\nlangControl.setClassNames('[]');"
        ],
        "injectContextObject": false,
        "asyncWait": true,
        "waitMode": "Synchronous"
      }
    ]
  }
]
</script>
</div>

<div id="TcHmiTextbox_3" data-tchmi-type="tchmi-textbox" data-tchmi-height="13" data-tchmi-height-unit="%" data-tchmi-left="2.0" data-tchmi-left-unit="%" data-tchmi-text="" data-tchmi-top="17.0" data-tchmi-top-unit="%" data-tchmi-width="78.0" data-tchmi-width-unit="%" data-tchmi-placeholder="Password">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiTextbox_3.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%pp%Keyboard::Visibility%/pp%",
        "valueType": "tchmi:framework#/definitions/Visibility",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:framework#/definitions/Visibility",
          "value": "Visible"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

</div>