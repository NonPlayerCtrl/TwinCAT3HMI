<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.16">
  <POU Name="UnixTimestamp" Id="{4c6110df-d82a-4adb-8368-603c8ee7bd3f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK UnixTimestamp
VAR_OUTPUT
	nanoseconds: ULINT;
END_VAR

VAR
    localSystemTime : FB_LocalSystemTime := ( bEnable := TRUE, dwCycle := 1 );
    getTimeZoneInformation : FB_GetTimeZoneInformation;
    timeZoneInformation : ST_TimeZoneInformation;
    specificLocalTimeToFileTime : FB_TzSpecificLocalTimeToFileTime;
    fileTime: T_FILETIME;
    onZerothSecondLastCycle : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Get local system time
localSystemTime();

// On the zeroth second of each minutesync timezone information
//IF (timeZoneInformation.standardName = '' OR (localSystemTime.systemTime.wSecond = 0 AND NOT onZerothSecondLastCycle)) THEN
//    getTimeZoneInformation(sNetID := '', bExecute := TRUE, tzInfo => timeZoneInformation);
//END_IF;

// Convert local system time to unix timestamps
//specificLocalTimeToFileTime(in := Tc2_Utilities.SYSTEMTIME_TO_FILETIME(localSystemTime.systemTime), tzInfo := timeZoneInformation, out => fileTime);
//nanoseconds := (SHL(DWORD_TO_ULINT(fileTime.dwHighDateTime), 32) + DWORD_TO_ULINT(fileTime.dwLowDateTime));

fileTime := Tc2_Utilities.SYSTEMTIME_TO_FILETIME(localSystemTime.systemTime);
nanoseconds := (SHL(DWORD_TO_ULINT(fileTime.dwHighDateTime), 32) + DWORD_TO_ULINT(fileTime.dwLowDateTime));

//onZerothSecondLastCycle := localSystemTime.systemTime.wSecond = 0;
]]></ST>
    </Implementation>
    <LineIds Name="UnixTimestamp">
      <LineId Id="111" Count="8" />
      <LineId Id="122" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="138" Count="2" />
      <LineId Id="123" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="67" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>